// THIS FILE WAS AUTOGENERATED - ANY EDITS TO THIS WILL BE LOST WHEN IT IS REGENERATED
// AT {{ .Provenance.Timestamp }} USING sqlc VERSION {{ .Provenance.Version }}

{{ $types := .Types }}

package {{ .Package }}

import (
  "github.com/shutej/sqlc/sqlc"
  "strings"
)

const Schema = "{{ .Schema }}"

{{ range $_, $t := .Tables }}

type {{ toLower $t.Name }} struct {
  {{ range $_, $f := $t.Fields }}
  {{ toUpper $f.Name }} sqlc.{{ $f.Type }}Field
  {{ end }}
  alias string
}

func (t *{{ toLower $t.Name }}) IsSelectable() {}

func (t *{{ toLower $t.Name }}) Schema() string {
  return Schema
}

func (t *{{ toLower $t.Name }}) Name() string {
  return sqlc.Qualified(t.Schema(), "{{ toLower $t.Name }}")
}

func (t *{{ toLower $t.Name }}) As(a string) sqlc.Selectable {
  return &{{ toLower $t.Name }}{
    {{ range $_, $f := $t.Fields }}
    {{ toUpper $f.Name }}: t.{{ toUpper $f.Name }},
    {{ end }}
    alias:a,
  }
}

func (t *{{ toLower $t.Name }}) Alias() string {
  return t.alias
}

func (t *{{ toLower $t.Name }}) MaybeAlias() string {
  if t.alias == "" {
    return "{{ toLower $t.Name }}"
  } else {
    return t.alias
  }
}

/////

{{ range $_, $ty := $types }}
func (t *{{ toLower $t.Name }}) {{ $ty.Prefix }}Field(name string) sqlc.{{ $ty.Prefix }}Field {
  return sqlc.{{ $ty.Prefix }}({{ toUpper $t.Name }}, strings.ToUpper(name))
}
{{ end }}

/////

func (t *{{ toLower $t.Name }}) Fields() []sqlc.Field {
  return []sqlc.Field{
    {{ range $_, $f := $t.Fields }}
    sqlc.{{ $f.Type }}({{ toUpper $t.Name }}, "{{ toUpper $f.Name }}"),
    {{ end }}
  }
}

{{ end }}

{{ range $_, $t := .Tables }}
var __{{ toLower $t.Name }} = &{{ toLower $t.Name }}{}
var {{ toUpper $t.Name }} = &{{ toLower $t.Name }} {

{{ range $_, $f := $t.Fields }}
  {{ toUpper $f.Name }}: sqlc.{{ $f.Type }}(__{{ toLower $t.Name }}, "{{ toUpper $f.Name }}"),
{{ end }}

}

{{ end }}
var TableLikes = []sqlc.TableLike{
{{ range $_, $t := .Tables }}
  {{ toUpper $t.Name }},
{{ end }}
}
